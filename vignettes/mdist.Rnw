%\VignetteIndexEntry{Using mdist}
%\VignetteKeywords{Enrichment, Transcription Factor Binding Sites, Compound Poisson Approximation}

\documentclass[12pt, a4paper]{article}

\usepackage{hyperref}

\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\textit{#1}}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}

\textwidth=6.2in
\textheight=8.5in
%\parskip=.3cm
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\author{Wolfgang Kopp\\Max Planck Institute for molecular Genetics}
\begin{document}
\title{How to use mdist}
\date{November 10, 2014}

\maketitle
\section{Introduction}
\Rpackage{mdist} offers methods to estimate enrichment of PWMs in 
double stranded DNA sequences or single stranded RNA/DNA sequences
based on an improved compound Poisson approximation or alternatively
a combinatorial model.
In this vignette we describe how to conduct 
a simple enrichment analysis for a given motif in a sequence of interest.

\section{Loading the background model}

Load the package 
<<>>=
library(mdist)
@

The background model is meant to model the sequence composition
outside of transcription factor binding sites. It can also
be thought of a sequence generating process, in which we would like
to determine the number of motif hits.
The background model is captured by an order-\(d\) Markov model
which is directly estimated from a given DNA sequence in
fasta format. The parameter \(d\) is specified by the user. By default it
will be set to $d=1$. The sequences provided in the fasta file can be of
variable length, however, sequences containing N's will be discarded.
\begin{Sinput}
> file=system.file("extdata/seq.fasta", package="mdist)
> read.background(file, order=1)
\end{Sinput}

\section{Loading a motif}
The motif can be loaded from a file via \Rfunction{read.motif} for various motif file formats,
including TAB-format or TRANSFAC format.
Each file is expected to hold
one motif. 
It is required to have strictly positive probabilities for each element of the PWM,
thus by default pseudocounts are added to the PWM.
\begin{Sinput}
> file=system.file("extdata/x1.pwm", package="mdist")
> read.motif("motif.pwm", format="tab", pseudocount=0.01)
\end{Sinput}

Alternatively, \Rfunction{matrix2motif} loads an R matrix as a PWM motif.
In this case, the R matrix dimension has to 
be \(4\times M\) with the columns summing to one and 
 strictly positive probabilities for all  element in the matrix.

\begin{Sinput}
> file=system.file("extdata/x1.pwm", package="mdist")
> m=read.table(file)
> matrix2motif(m)
\end{Sinput}

\section{Compute overlap probability}
Prior to running the analysis, \Rfunction{mdist.option} must be called, 
which specifies the significance level for calling motif hits, the granularity
of the score range for discretization and how many cores shall be used for
parallel processing.
%Before processing the overlapping probabilities, the user needs to specify certain 
%parameters by calling \Rfunction{mdist.option}. 

\begin{Sinput}
> mdist.option(alpha=0.01, gran=0.01,ncores=10)
\end{Sinput}
Rules of thumb: The smaller alpha is chosen the faster the algorithm will be
and the smaller gran is chosen the slower it will be.\par
The overlapping hit probabilities are computed via
\begin{Sinput}
> op=overlap.prob()
\end{Sinput}
Alternatively, for single stranded sequences (e.g. RNAs) use
\begin{Sinput}
> op=overlap.prob.singlestranded()
\end{Sinput}

The resulting a list of overlapping hit probabilities are used
as  input for \Rfunction{comp.pois}, \Rfunction{comp.pois.test}, 
\Rfunction{comp.pois.singlestranded}, \Rfunction{comp.pois.singlestranded.test},
 \Rfunction{dynprog.count} or \Rfunction{dynprog.count.test}

\section{Run combinatorial model for modeling the number of motif hits}

After having determined the overlapping probabilities, 
the combinatorial distribution over
the number of motif hits can be  determined by
\begin{Sinput}
> seqlen=rep(100,10)
> dist=dynprog.count(seqlen,maxhits=100,op)
\end{Sinput}

The distribution is computed across 10 sub-sequences of length 100bp each in the 
example above.
The maximum number of motif hits is set to be \textit{maxhits}.\par
One can directly test for statistical overrepresentation of the motif in a given DNA sequence
as follows
\begin{Sinput}
> seqfile=system.file("extdata","seq.fasta", package="mdist")
> numofhits=num.motifhits(seqfile)
> pvalue=dynprog.count.test(numofhits, op, maxhit=100)
\end{Sinput}

\section{Run the Compound Poisson Approximiation for the number of motif hits}

Alternatively, the enrichment of motif hits in a DNA sequence can be tested by an
underlying compound Poisson model by invoking \Rfunction{comp.pois} or
\Rfunction{comp.pois.singlestranded}.
This model can be used for searching for motif hits in relatively long sequences
and if variable sequences need to be scanned.
In the following example, the compound Poisson approximation is computed for 
100 sequences each of length 150bp with a maximal number of hits of 50
and a maximal clump size of 20.
The functions can be used as follows
\begin{Sinput}
> seqlen=rep(150,100)
> dist <- comp.pois(seqlen, maxhits=50, maxclumpsize=20, overlap=op)
\end{Sinput}
or alternatively for single stranded sequences
\begin{Sinput}
> seqlen=rep(150,100)
> dist <- comp.pois.singlestranded(seqlen, maxhits=50, maxclumpsize=20, overlap=op)
\end{Sinput}

The resulting distribution can be inspected and visualized by
\begin{Sinput}
plot(dist\$dist)
\end{Sinput}

In order to test for an enrichment of motif hits
in a given DNA sequence use
\begin{Sinput}
> seqlen=rep(150,100)
> pvalue <- comp.pois.test(seqlen, maxhits=50, maxclumpsize=20)
\end{Sinput}
or
\begin{Sinput}
> seqlen=rep(150,100)
> pvalue <- comp.pois.singlestranded.test(seqlen, maxhits=50, maxclumpsize=20)
\end{Sinput}
\end{document}
